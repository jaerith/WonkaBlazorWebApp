@page "/creategrove"

@inject HttpClient Http
@inject HttpClient httpClient

<h1>Create Grove</h1>

<p>This component demonstrates creating a Grove on the chain.</p>

<div>
    <div class="row">
        <div class="col-sm-3">
            <p>Grove ID</p>
        </div>
        <div class="col-sm-4">
            <input placeholder="Enter ID for Grove" bind="@gid" />
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-sm-3">
            <p>Grove Description</p>
        </div>
        <div class="col-sm-4">
            <input placeholder="Enter Description for Grove" bind="@gdesc" />
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-sm-3">
            <p>Result</p>
        </div>
        <div class="col-sm-4">
            <input readonly bind="@finalresult" />
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-sm-2">
            <button onclick="@Submit" class="btn">Submit</button>
        </div>
    </div>
</div>

@functions {

    string gid;
    string gdesc;
    string finalresult;

    protected override async Task OnInitAsync()
    {
        // reports = await Http.GetJsonAsync<RuleTreeReport[]>("sample-data/reports.json");
    }

    private async void Submit()
    {
        WonkaBlazorWebApp.Shared.WBWAGrove newGrove = new WonkaBlazorWebApp.Shared.WBWAGrove();

        newGrove.GroveId      = gid;
        newGrove.GroveDesc    = gdesc;
        newGrove.GroveMembers = new List<string>();

        newGrove.SerializeToBlockchain = true;

        // Http.PostAsJsonAsync("api/grove", newGrove);
    }

}
